#在application.properties中配置通用内容，并设置spring.profiles.active=dev，以开发环境为默认配置。
#在application-(profile}.properties中配置各个环境不同的内容。通过命令行方式去激活不同环境的配置。

# 配置的读取顺序 数字越小，优先级越高
#**********1.在命令行中传入的参数。**********
#2.SPRING_APPLICATION_JSON中的属性。 SPRING_APPLICATION_JSON是以JSON格式配置在系统环境变量中的内容。
#3.java:comp/env中的JNDI 属性。
#4.Java的系统属性， 可以通过System.getProperties()获得的内容。
#5.操作系统的环境变量 。
#6.通过random.*配置的随机属性
#7.**********位于当前应用jar包之外，针对不同{profile}环境的配置文件内容，例如application-(profile}.properties或是YAML定义的配置文件。**********
#8.**********位于当前应用jar包之内，针对不同{profile}环境的配置文件内容，例如application-(profile} .properties或是YAML定义的配置文件。**********
#9.**********位于当前应用jar包之外的application.properties和YAML配置内容。**********
#10.**********位于当前应用jar包之内的application.properties和YAML配置内容。***************
#11.**********在@configuration注解修改的类中，通过@PropertySource 注解定义的属性。***************
#12.应用默认属性，使用SpringApplication.setDefaultProperties定义的内容。

spring:
  profiles:
    active: dev
book:
  name: SpringCloudinAction
  author: liubei
  desc: ${book.au七hor} is writing《${book.name}》

#  spring actuator配置：
# https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator
#  1.endpoint需要同时满足enable+expose（可用+暴露）才能使用
#  2.expose分jmx暴露/web暴露
#  3.默认所有端点除了shutdown（优雅关闭应用）都enable
#  默认所有端点除了health都不web暴露，绝大部分端点都可通过jmx暴露
management:
  endpoints:
    shutdown:
      enabled: true
    health:
      show-details: always
    web:
      exposure:
        include: "*"